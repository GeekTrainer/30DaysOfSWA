<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
    <id>https://staticwebdev.github.io/30DaysOfSWA/blog</id>
    <title>#30DaysOfSWA Blog</title>
    <updated>2021-05-04T00:00:00.000Z</updated>
    <generator>https://github.com/jpmonette/feed</generator>
    <link rel="alternate" href="https://staticwebdev.github.io/30DaysOfSWA/blog"/>
    <subtitle>#30DaysOfSWA Blog</subtitle>
    <icon>https://staticwebdev.github.io/30DaysOfSWA/img/favicon.ico</icon>
    <entry>
        <title type="html"><![CDATA[#03: API-Enabling SWA]]></title>
        <id>api-enabling-swa</id>
        <link href="https://staticwebdev.github.io/30DaysOfSWA/blog/api-enabling-swa"/>
        <updated>2021-05-04T00:00:00.000Z</updated>
        <summary type="html"><![CDATA[Welcome to Week 1, Day 3 of #30DaysOfSWA!!]]></summary>
        <content type="html"><![CDATA[<p>Welcome to <code>Week 1, Day 3</code> of <strong>#30DaysOfSWA</strong>!! </p><p>Yesterday, we built and deployed our first Static Web App (using a vanillaJS template) from a GitHub repo. We used the VS Code Extension and, with just a few clicks, it setup automated GitHub Actions (CI/CD) workflows for us transparently. Today - we learn how we can add <strong>serverless API endpoints</strong> to our application using Azure Functions, helping us scale APIs more effectively with demand.</p><h2 class="anchor anchorWithStickyNavbar_mojV" id="what-well-cover">What We'll Cover<a class="hash-link" href="#what-well-cover" title="Direct link to heading">​</a></h2><ul><li>Why go Serverless with SWA?</li><li>Add API with Azure Functions</li><li>Quickstart: Use Managed Functions</li><li>Bring Your Own Functions</li><li><strong>Example:</strong> Bring <a href="https://github.com/sinedied/azure-swag/" target="_blank" rel="noopener noreferrer">Azure-SWAG</a> to May 4!</li><li><strong>Exercise:</strong> Try it out yourself!</li></ul><p><img loading="lazy" src="/30DaysOfSWA/assets/images/03-banner-9229849fe218e3e7721c3687fb4299d8.png" width="1000" height="420" class="img_E7b_"></p><h2 class="anchor anchorWithStickyNavbar_mojV" id="why-go-serverless">Why Go Serverless?<a class="hash-link" href="#why-go-serverless" title="Direct link to heading">​</a></h2><p>When <a href="/30DaysOfSWA/blog/introducing-swa">Introducing SWA</a>, we talked about how static web apps are architected to separate <strong>static content assets</strong> and <strong>dynamic API endpoints</strong> into separate components that can be served and scaled independently.</p><p>In yesterday's post we looked at a basic Static Web App with just content assets (no API). Deploying it with SWA helped us take advantage of Azure's globally-distributed content servers for fast and cost-effective access. Today, we want to add an API endpoint to support dynamic requests from clients. So what does serverless mean, and how do we implement serverless API endpoints?</p><p>In this context, <a href="https://docs.microsoft.com/en-us/azure/architecture/reference-architectures/serverless/web-app" target="_blank" rel="noopener noreferrer">Serverless</a> is about using an event-driven architecture to allocate our compute resources on-demand. So, our API server will scale as demand grows, but be cost-effective when demand drops.</p><p><a href="https://docs.microsoft.com/en-us/azure/azure-functions/functions-overview" target="_blank" rel="noopener noreferrer">Azure Functions</a> makes implementing your serverless solutions easier. Event handling is implemented with <em>functions</em> (code blocks) that run on compute resources that are dynamically-allocated. Resources can spin up as API requests grow, and spin down as demand drops. <a href="https://docs.microsoft.com/en-us/learn/paths/create-serverless-applications/" target="_blank" rel="noopener noreferrer"><strong>Try this learning path</strong></a> for a deep-dive into using Azure Functions.</p><h2 class="anchor anchorWithStickyNavbar_mojV" id="use-azure-functions">Use Azure Functions<a class="hash-link" href="#use-azure-functions" title="Direct link to heading">​</a></h2><p>Static Web Apps and Azure Functions are integrated seamlessly, enabling key features with respect to security (user data) and routing integrations:</p><ul><li><strong><a href="https://docs.microsoft.com/en-us/azure/static-web-apps/user-information?tabs=javascript#api-functions" target="_blank" rel="noopener noreferrer">User data access</a></strong> - API functions can directly access user authenticaton and role-based authorization data when handling requests.</li><li><strong><a href="https://docs.microsoft.com/en-us/azure/static-web-apps/configuration?#routes" target="_blank" rel="noopener noreferrer">API Route access</a></strong> - the application can access the <code>/api</code> route securely, without requiring custom CORS rules.</li></ul><p>But it gets better. Your SWA can be configured for Azure Functions in two ways:</p><ul><li><strong>Managed Functions</strong> - where the Azure Static Web Apps service configures and manages your Azure Functions deployment.</li><li><strong>Bring Your Own Functions</strong> - where you use a pre-existing Azure Functions application and manage the deployment yourself.</li></ul><p>The Free plan supports only the Managed Functions option. It has <a href="https://docs.microsoft.com/en-us/azure/static-web-apps/apis" target="_blank" rel="noopener noreferrer">some limitations</a> - e.g., supports only HTTP triggers and lacks support for <a href="https://docs.microsoft.com/en-us/azure/azure-functions/durable/durable-functions-overview" target="_blank" rel="noopener noreferrer">Durable Functions</a> etc. - but is quick to setup and seamless to use. We'll explore this option today but look for a post in Week 4 that will discuss the <em><a href="https://docs.microsoft.com/en-us/azure/static-web-apps/functions-bring-your-own" target="_blank" rel="noopener noreferrer">Bring Your Own Functions</a></em> approach in detail.</p><h2 class="anchor anchorWithStickyNavbar_mojV" id="adding-the-api">Adding the API<a class="hash-link" href="#adding-the-api" title="Direct link to heading">​</a></h2><p>Want to get some hands-on experience with adding an API endpoint to your Static Web Apps deployment? Check out this <a href="https://docs.microsoft.com/en-us/azure/static-web-apps/add-api?tabs=vanilla-javascript" target="_blank" rel="noopener noreferrer">Quickstart</a> tutorial that builds on the vanilla-JS application you deployed previously. The key steps are:</p><p><strong>1. Setup Azure Functions for SWA</strong></p><ul><li>Install the <a href="https://marketplace.visualstudio.com/items?" target="_blank" rel="noopener noreferrer">Azure Functions Extension</a> for VS Code.</li><li>Open your application root folder ("/") - create an "api" subfolder</li><li>Select "Azure Static Web Apps: Create HTTP Function" through Command Palette or select the lightning bolt option in Azure extension menu.</li><li>Enter required configuration information (language="JavaScript", function name="message"), and confirm.</li></ul><p><em>Sit back and wait till the process completes setup.</em> This populates the <code>/api</code> directory with configuration files (*.json) in the root folder, and a <code>/api/message</code> subfolder that contains 2 files:</p><ul><li><em>function.json</em> - defines this function's trigger, bindings and <a href="https://docs.microsoft.com/en-us/azure/azure-functions/functions-reference?tabs=blob#function-code" target="_blank" rel="noopener noreferrer">other settings</a>.</li><li><em>index.js</em> - implements an async function (accessed at <code>/api/message</code>)</li></ul><p><strong>2. Update the index.js file to implement your function</strong> - making sure it returns a desired response given the incoming API request and context (input parameters).</p><p><strong>3. Update your application code to invoke the API</strong> - you can do this by calling <code>fetch('/api/message')</code> directly - the seamless Azure Functions integration ensures that the API routing happens automagically.</p><p><strong>4. Test the integration locally with the SWA CLI</strong>.
The Azure Static Web Apps CLI (SWA CLI) is a tool to support local development for Static Web Apps by emulating required services where needed. Follow <a href="https://docs.microsoft.com/en-us/azure/static-web-apps/add-api?tabs=vanilla-javascript#run-the-frontend-and-api-locally" target="_blank" rel="noopener noreferrer">these steps</a> to install the tools and run/test your app and API together in your local development environment. Look for a detailed 2-part post in Week 3 ("Developer Tools") where we cover the SWA CLI capabilities, configuration, and usage, in more detail.</p><p><strong>5. Update the GitHub Actions workflow with API location</strong></p><p>This is the key step to make sure the Azure Static Web Apps deployment workflow also picks up the new API function.</p><ul><li>Open the default GitHub Actions workflow file for your SWA and update the <code>api_location</code> property to "api".</li><li>Save and commit changes to trigger rebuild and deploy.</li></ul><p><strong>Want to see API in action?</strong> Scroll down to the <code>Exercise</code> section where we walk through a quick activity you can do to build and deploy a Static Web App with GitHub (SWAG) <em>and celebrate #StarWars Day</em> in the process!</p><p><strong>Prefer a video tutorial?</strong> Check out this <a href="https://docs.microsoft.com/en-us/shows/azure-tips-and-tricks-static-web-apps/" target="_blank" rel="noopener noreferrer">Azure Static Web Apps: Tips &amp; Tricks</a> that walks through the process from a <em>react-starter</em> template, and showcases the use of remote <a href="https://code.visualstudio.com/docs/remote/create-dev-container" target="_blank" rel="noopener noreferrer">development container</a> for Visual Studio Code that further streamlines your development experience.</p><iframe width="560" height="315" frameborder="0" src="https://aka.ms/docs/player?show=azure-tips-and-tricks-static-web-apps&amp;ep=how-to-add-an-api-to-your-azure-static-web-app-7-of-16--azure-tips-and-tricks-static-web-apps"></iframe><h2 class="anchor anchorWithStickyNavbar_mojV" id="exercise-swag">Exercise: SWAG!<a class="hash-link" href="#exercise-swag" title="Direct link to heading">​</a></h2><p>Today is May 4 - Star Wars Day! Wouldn't it be nice if we could celebrate this with our favorite Star Wars quotes? Thankfully, <a href="https://www.twitter.com/sinedied" target="_blank" rel="noopener noreferrer">my colleague Yohan</a> has a great <a href="https://dev.to/sinedied/the-easy-way-to-serverless-web-apps-and-apis-with-azure-swag-2heb" target="_blank" rel="noopener noreferrer">Azure-SWAG</a> template that combines images from <a href="https://unsplash.com" target="_blank" rel="noopener noreferrer">Unsplash</a> with a pre-defined set of quotes in an API function ("/api/quote") </p><p><strong>So I created a version for my <a href="ttps://github.com/nitya/may4-swag" target="_blank" rel="noopener noreferrer">May 4 homage</a></strong>. Here's what that looks like when deployed. Refresh the SWA to get a new image and quote each time (from the API).</p><p><img loading="lazy" alt="May The Fourth Homage App" src="/30DaysOfSWA/assets/images/03-may4-a52b69197e93301fb9ee7f81cae37cd0.png" width="975" height="833" class="img_E7b_"></p><ul><li>See the <a href="https://github.com/nitya/may4-swag" target="_blank" rel="noopener noreferrer">Code Repository</a></li><li>See the <a href="https://agreeable-tree-0a216f70f.1.azurestaticapps.net/" target="_blank" rel="noopener noreferrer">Deployed SWA</a></li></ul><p>Your assignment: follow <a href="https://github.com/nitya/may4-swag#steps" target="_blank" rel="noopener noreferrer">these steps</a> to replicate my project, then explore the <a href="https://github.com/nitya/may4-swag/blob/main/api/quote/index.js" target="_blank" rel="noopener noreferrer">index.js</a> code to see how the <code>/api/quote</code> function is implemented and review the <a href="https://github.com/nitya/may4-swag/blob/main/app.js" target="_blank" rel="noopener noreferrer"><code>app.js</code></a> code to see how that API is invoked within the application.</p><h2 class="anchor anchorWithStickyNavbar_mojV" id="useful-resources">Useful Resources<a class="hash-link" href="#useful-resources" title="Direct link to heading">​</a></h2><ul><li><a href="https://docs.microsoft.com/en-us/azure/static-web-apps/apis" target="_blank" rel="noopener noreferrer">API Support in SWA</a></li><li><a href="https://docs.microsoft.com/en-us/azure/static-web-apps/add-api?tabs=vanilla-javascript" target="_blank" rel="noopener noreferrer">Add API with Managed Functions</a></li><li><a href="https://docs.microsoft.com/en-us/azure/static-web-apps/functions-bring-your-own" target="_blank" rel="noopener noreferrer">Bring Your Own Functions</a></li><li><a href="https://github.com/nitya/may4-swag" target="_blank" rel="noopener noreferrer">May4-Swag Demo</a></li></ul>]]></content>
        <author>
            <name>Anthony Chu</name>
            <uri>https://github.com/anthonychu</uri>
        </author>
        <author>
            <name>Nitya Narasimhan</name>
            <uri>https://twitter.com/nitya</uri>
        </author>
        <category label="swa" term="swa"/>
        <category label="30days" term="30days"/>
        <category label="core-concepts" term="core-concepts"/>
    </entry>
    <entry>
        <title type="html"><![CDATA[#02: Building SWA]]></title>
        <id>building-swa</id>
        <link href="https://staticwebdev.github.io/30DaysOfSWA/blog/building-swa"/>
        <updated>2021-05-03T00:00:00.000Z</updated>
        <summary type="html"><![CDATA[Welcome to Week 1, Day 2 of #30DaysOfSWA!!]]></summary>
        <content type="html"><![CDATA[<p>Welcome to <code>Week 1, Day 2</code> of <strong>#30DaysOfSWA</strong>!! </p><p>Yesterday we got a quick introduction to Azure Static Web Apps (what it is, how it's architected, and 10 features that make it useful to modern web developers). Today, it's time to dive to dive into <em>Building Static Web Apps</em>.</p><h2 class="anchor anchorWithStickyNavbar_mojV" id="what-well-cover">What We'll Cover<a class="hash-link" href="#what-well-cover" title="Direct link to heading">​</a></h2><ul><li>How can I get started with SWA?</li><li>Using SWA with personal and production projects.</li><li>Building &amp; Deploying your first SWA</li><li><strong>Tutorial</strong> Let's Build a Classic Movie Crawler!</li><li><strong>Exercise</strong> Your turn! And <code>#MayThe4thBeWithYou</code></li><li><strong>Resources:</strong> <a href="https://docs.microsoft.com/en-us/azure/static-web-apps/getting-started?tabs=vanilla-javascript" target="_blank" rel="noopener noreferrer">Static Web Apps Quickstarts</a></li></ul><p><img loading="lazy" src="/30DaysOfSWA/assets/images/02-banner-5a795a52ea06e154625132bc426ca7d6.png" width="1000" height="420" class="img_E7b_"></p><h2 class="anchor anchorWithStickyNavbar_mojV" id="1-getting-started">1. Getting Started<a class="hash-link" href="#1-getting-started" title="Direct link to heading">​</a></h2><p>The Azure Static Web Apps service makes it easy to publish your modern web application directly from its codebase. Let's walk through that process for a basic web application (HTML, CSS, JS) first, to understand the development workflow and configuration options.</p><h3 class="anchor anchorWithStickyNavbar_mojV" id="11-requirements">1.1 Requirements<a class="hash-link" href="#11-requirements" title="Direct link to heading">​</a></h3><p>To do this quickstart, you'll need </p><ul><li>a <a href="https://github.com/" target="_blank" rel="noopener noreferrer">GitHub account</a> - you can <a href="https://github.com/signup" target="_blank" rel="noopener noreferrer">signup</a> for a free one if needed.</li><li>an <a href="https://portal.azure.com" target="_blank" rel="noopener noreferrer">Azure account</a> - you can <a href="https://azure.microsoft.com/en-us/free/" target="_blank" rel="noopener noreferrer">signup</a> for a free account to start.</li><li><a href="https://code.visualstudio.com/" target="_blank" rel="noopener noreferrer">Visual Studio Code</a> and <a href="https://marketplace.visualstudio.com/items?itemName=ms-azuretools.vscode-azurestaticwebapps" target="_blank" rel="noopener noreferrer">this VS Code Extension</a> - if you favor IDEs.</li></ul><p>This approach assumes you favor using an IDE for development, and want to streamline build/deploy into that workflow. I'm a fan of Visual Studio Code so I'll use this approach. If you prefer to use the command line, or a browser, we have you covered! </p><ul><li><a href="https://docs.microsoft.com/en-us/azure/static-web-apps/get-started-cli?tabs=vanilla-javascript" target="_blank" rel="noopener noreferrer">Quickstart: With Azure CLI</a> - for commandline-driven workflow.</li><li><a href="https://docs.microsoft.com/en-us/azure/static-web-apps/get-started-portal?tabs=vanilla-javascript&amp;pivots=github" target="_blank" rel="noopener noreferrer">Quickstart: With Azure Portal</a> - for browser-driven workflow.</li></ul><h3 class="anchor anchorWithStickyNavbar_mojV" id="12-final-outcome">1.2 Final Outcome<a class="hash-link" href="#12-final-outcome" title="Direct link to heading">​</a></h3><p>The goal is to take this basic HTML/CSS/JS application and configure it for automatic build/deploy to Azure Static Web Apps. We'll be using this <strong><a href="https://docs.microsoft.com/en-us/azure/static-web-apps/getting-started?tabs=vanilla-javascript" target="_blank" rel="noopener noreferrer">official quickstart</a></strong> which comes with a  <a href="https://github.com/staticwebdev/vanilla-basic/generate" target="_blank" rel="noopener noreferrer">vanilla-JS application starter template</a> that provides our base application. Feel free to be adventurous and follow these steps with your own vanillaJS codebase.</p><p>We'll clone that starter first - making <strong>GitHub</strong> our default code-hosting provider. Azure Static Web Apps has flexible deployment options so look at tutorials for <strong><a href="https://github.com/staticwebdev/vanilla-basic/generate" target="_blank" rel="noopener noreferrer">BitBucket</a>, <a href="https://docs.microsoft.com/en-us/azure/static-web-apps/gitlab?tabs=vanilla-javascript" target="_blank" rel="noopener noreferrer">GitLab</a> or <a href="https://docs.microsoft.com/en-us/azure/static-web-apps/get-started-portal?tabs=vanilla-javascript" target="_blank" rel="noopener noreferrer">Azure DevOps</a></strong> if preferred. Watch for the <em>Deploying SWA</em> post later this week for more details.</p><p><img loading="lazy" alt="VanillaJS Quickstart outcome page" src="/30DaysOfSWA/assets/images/02-vanillajs-start-55364462b5fedaf66c3f2b0310e39f13.png" width="996" height="279" class="img_E7b_"></p><p>So what does that vanilla-JS starter app do? Not much - it's just a simple title on a blank webpage as shown above. Here's what you'll end up with when done:</p><ul><li><strong>Hosted SWA</strong>: See the <a href="https://witty-desert-019fd800f.1.azurestaticapps.net/" target="_blank" rel="noopener noreferrer">live-deployment here</a> </li><li><strong>Codebase</strong>: See the <a href="https://github.com/fearlessly-dev/my-first-swa" target="_blank" rel="noopener noreferrer">code source repo here</a></li></ul><p>Ready to do this? Let's go!</p><h3 class="anchor anchorWithStickyNavbar_mojV" id="13-build-process">1.3 Build Process<a class="hash-link" href="#13-build-process" title="Direct link to heading">​</a></h3><p>The process is captured in <a href="https://docs.microsoft.com/en-us/azure/static-web-apps/getting-started?tabs=vanilla-javascript" target="_blank" rel="noopener noreferrer">this quickstart document</a> and has the following steps:</p><ul><li><a href="https://github.com/login?return_to=/staticwebdev/vanilla-basic/generate" target="_blank" rel="noopener noreferrer"><strong>Click</strong></a> to generate your vanilla-js app from the template.</li><li><a href="https://docs.microsoft.com/en-us/azure/static-web-apps/getting-started?tabs=vanilla-javascript#clone-the-repository" target="_blank" rel="noopener noreferrer"><strong>Clone</strong></a> the repo to your local machine. Open in Visual Studio Code.</li><li><a href="https://docs.microsoft.com/en-us/azure/static-web-apps/getting-started?tabs=vanilla-javascript#install-azure-static-web-apps-extension" target="_blank" rel="noopener noreferrer"><strong>Install</strong></a> the Azure Static Web Apps extension in VS Code (if not present)</li><li><a href="https://docs.microsoft.com/en-us/azure/static-web-apps/getting-started?tabs=vanilla-javascript#create-a-static-web-app" target="_blank" rel="noopener noreferrer"><strong>Select Azure</strong></a> in the Activity Bar to view Azure Extensions window. You will be prompted to log into Azure and GitHub during this workflow if needed.<ol><li>Select the Static Web Apps section and click "+" to start SWA setup</li><li>Select the relevant Azure subscription to use</li><li>Select the region to deploy to (close to you)</li><li>Select the "Custom" preset - use <code>/src</code> as app location, leave build empty</li><li>Press Enter. Watch for a pop-up notification of build status.</li></ol></li></ul><p>Once deployment completes (you should see the success notification), visit the Azure Extensions window again.Look for the project in the Static Web Apps section and right-click for options. Here are three key ones to know:</p><ol><li><code>Browse Site</code> - click to see the <a href="https://witty-desert-019fd800f.1.azurestaticapps.net/" target="_blank" rel="noopener noreferrer">live-deployed site</a></li><li><code>Edit Workflow</code> - click to see automated <a href="https://github.com/fearlessly-dev/my-first-swa/blob/main/.github/workflows/azure-static-web-apps-witty-desert-019fd800f.yml" target="_blank" rel="noopener noreferrer">GitHub Actions</a> setup for the SWA.</li><li><code>Open in Portal</code> - click to manage the SWA in the Azure Portal.</li></ol><p><strong>That's it!! You just deployed your first Static Web App with just a few clicks and configuration inputs!</strong> 🎉</p><h3 class="anchor anchorWithStickyNavbar_mojV" id="14-lets-unpack">1.4 Let's Unpack<a class="hash-link" href="#14-lets-unpack" title="Direct link to heading">​</a></h3><p>So what happened under the hood? </p><p>If you look at your <a href="https://github.com/fearlessly-dev/my-first-swa" target="_blank" rel="noopener noreferrer">codebase</a> you'll see <strong>one key change</strong> - the Azure SWA service <a href="https://github.com/fearlessly-dev/my-first-swa/commit/1441e25149f1573a7010682e0a431263fbd89cb6" target="_blank" rel="noopener noreferrer">sets up the GitHub Actions workflow</a> for you, directly in the repo using your GitHub credentials. No manual steps needed from you!</p><p>The workflow automates the build/deploy process on both code commit (<code>push</code>) and contribution (<code>pull request</code>) events. So when you make changes to your application code, it triggers the workflow to automatically rebuild and deploy the updated Static Web App. 🙌🏽</p><h3 class="anchor anchorWithStickyNavbar_mojV" id="15-video-tutorial">1.5 Video Tutorial<a class="hash-link" href="#15-video-tutorial" title="Direct link to heading">​</a></h3><p>Want to see a video walkthrough of the process? Check out this 2-minute <a href="https://docs.microsoft.com/en-us/shows/azure-tips-and-tricks-static-web-apps/" target="_blank" rel="noopener noreferrer">Azure Static Web Apps: Tips &amp; Tricks</a> video from 2021. It features a different vanilla-JS application but follows the same "Quickstart with Visual Studio Code" steps so you can see them in action! </p><iframe width="560" height="315" frameborder="0" src="https://aka.ms/docs/player?show=azure-tips-and-tricks-static-web-apps&amp;ep=how-to-deploy-your-first-azure-static-web-apps-3-of-16--azure-tips-and-tricks-static-web-apps"></iframe><h2 class="anchor anchorWithStickyNavbar_mojV" id="2-there-is-no-try">2. "There is No Try!"<a class="hash-link" href="#2-there-is-no-try" title="Direct link to heading">​</a></h2><p>You realize today is May 3rd, right? That means tomorrow is May 4 - and what better way to celebrate our favorite movie call-to-action (<code>MayTheFourthBeWithYou</code>) than to pay homage with our own custom crafted movie banner sharing our origin story. </p><p><img loading="lazy" alt="Build a crawler with Azure Static Web Apps" src="/30DaysOfSWA/assets/images/02-banner-glaucia-239d13ae2cf19aced204fe0d027a72c0.png" width="1000" height="420" class="img_E7b_"></p><p>Try out this 3-part tutorial to take the basic HTML/CSS/JS application to the next level - and recreate the iconic introduction from the classic <a href="https://en.wikipedia.org/wiki/Star_Wars" target="_blank" rel="noopener noreferrer">Star Wars</a> franchise. Just do the thing! </p><ol><li><a href="https://dev.to/azure/building-star-wars-crawler-with-azure-static-web-apps-part-1-3o39" target="_blank" rel="noopener noreferrer">Part 1: Create basic page and style it with HTML/CSS</a> </li><li><a href="https://dev.to/azure/building-star-wars-crawler-with-azure-static-web-apps-part-2-3hc0" target="_blank" rel="noopener noreferrer">Part 2: Bring moving banner to life with JS</a></li><li><a href="https://dev.to/azure/building-star-wars-crawler-with-azure-static-web-apps-part-3-41ip" target="_blank" rel="noopener noreferrer">Part 3: Use Visual Studio Code to deploy to Static Web Apps</a></li></ol><p><strong>Please Note:</strong> The tutorial is meant only to illustrate the creation of the banner with CSS/JS/HTML and celebrate an iconic movie on an iconic date! The movie logo, music and other iconic elements remain the property of relevant copyright holders and should not be used without permission. </p><h2 class="anchor anchorWithStickyNavbar_mojV" id="3-lets-talk-plans">3. Let's Talk Plans!<a class="hash-link" href="#3-lets-talk-plans" title="Direct link to heading">​</a></h2><p>The Azure Static Web Apps service comes with <a href="https://docs.microsoft.com/en-us/azure/static-web-apps/plans" target="_blank" rel="noopener noreferrer">two plans</a> - a <strong>Free</strong> plan that is perfect for Personal projects, and a <strong>Standard</strong> (paid) plan that is more appropriate for apps deployed in production. Check out the <a href="https://docs.microsoft.com/en-us/azure/static-web-apps/plans#features" target="_blank" rel="noopener noreferrer">Features Comparison</a> to judge what plan is best for you.</p><p>My personal experience is that, as an individual developer, the free tier is sufficiently generous to explore ideas and host prototypes (for real-world users) or demos (for validating ideas). The free tier also comes with Managed Functions support (to integrate a serverless API capability) out of the box. You will need the Standard plan if you want to "Bring your own functions" instead. For the most part, you should be able to try out all the Exercises in #30DaysOfSWA using the Free tier.</p><h2 class="anchor anchorWithStickyNavbar_mojV" id="4-exercise">4: Exercise<a class="hash-link" href="#4-exercise" title="Direct link to heading">​</a></h2><p>If you followed along with the quickstart, you should have setup and deployed your first Azure Static Web App using a vanilla-JS starter. Now, time to challenge yourself by trying out one (or both) of these options:</p><ul><li><strong>Complete the other quickstart tutorials</strong> - using <a href="https://docs.microsoft.com/en-us/azure/static-web-apps/get-started-cli?tabs=vanilla-javascript" target="_blank" rel="noopener noreferrer">Azure CLI</a> and <a href="https://docs.microsoft.com/en-us/azure/static-web-apps/getting-started?tabs=vanilla-javascript" target="_blank" rel="noopener noreferrer">Azure Portal</a> - to get a sense of how the workflows differ. And join the <a href="/30DaysOfSWA/blog/swanniversary">#SWAanniversary</a> event to learn more about <a href="https://docs.microsoft.com/en-us/azure/static-web-apps/local-development" target="_blank" rel="noopener noreferrer">SWA CLI</a> for local development.</li><li><strong>Build your own movie crawler</strong> - follow Glaucia's tutorial to have the default banner running on Azure Static Web Apps - then customize the words to suit <em>your origin story</em> and share it on May 4th (<a href="https://www.starwars.com/star-wars-day" target="_blank" rel="noopener noreferrer">StarWars Day</a>) - and <code>MayThe4thBeWithYou!</code>.</li></ul>]]></content>
        <author>
            <name>Glaucia Llemos</name>
            <uri>https://github.com/glaucia86</uri>
        </author>
        <author>
            <name>Nitya Narasimhan</name>
            <uri>https://twitter.com/nitya</uri>
        </author>
        <category label="swa" term="swa"/>
        <category label="30days" term="30days"/>
        <category label="core-concepts" term="core-concepts"/>
    </entry>
    <entry>
        <title type="html"><![CDATA[#01: Introducing SWA]]></title>
        <id>introducing-swa</id>
        <link href="https://staticwebdev.github.io/30DaysOfSWA/blog/introducing-swa"/>
        <updated>2021-05-02T00:00:00.000Z</updated>
        <summary type="html"><![CDATA[Welcome to Week 1, Day 1 of #30DaysOfSWA!!]]></summary>
        <content type="html"><![CDATA[<p>Welcome to <code>Week 1, Day 1</code> of <strong>#30DaysOfSWA</strong>!! </p><p>This week, we'll focus on the <strong>Core Concepts</strong> behind Azure Static Web Apps, starting with an introduction to SWA and continuing on to building, enhancing, and deploying, your SWA for users to experience. Let's get started today by <em>Introducing Static Web Apps</em>.</p><h2 class="anchor anchorWithStickyNavbar_mojV" id="what-well-cover">What We'll Cover<a class="hash-link" href="#what-well-cover" title="Direct link to heading">​</a></h2><ul><li>What is Azure Static Web Apps?</li><li>How is it architected?</li><li>Where can I use it?</li><li>10 Key Features to know</li><li><strong>Exercise:</strong> Explore SWA Examples!</li><li><strong>Resource:</strong> <a href="https://docs.microsoft.com/en-us/azure/static-web-apps/overview" target="_blank" rel="noopener noreferrer">Static Web Apps Overview</a></li></ul><p><img loading="lazy" src="/30DaysOfSWA/assets/images/01-banner-be8d7d0f3d456b78fd3930cbaab95247.png" width="1000" height="420" class="img_E7b_"></p><h2 class="anchor anchorWithStickyNavbar_mojV" id="what-is-azure-swa">What is Azure SWA?<a class="hash-link" href="#what-is-azure-swa" title="Direct link to heading">​</a></h2><p><a href="https://docs.microsoft.com/en-us/azure/static-web-apps/overview" target="_blank" rel="noopener noreferrer">Azure Static Web Apps</a> is a cloud-based service that <strong>automatically</strong> builds and deploys full-stack web apps to Azure <strong>directly from your code repository</strong>. The service works with popular code sources like GitHub, GitLab and BitBucket by default. Look for the <em>Deploying SWA</em> post later this week where we walk through the details here.</p><p>The benefit to you as a developer is that it <strong>simplifies your developer experience</strong>. Just commit changes to your application source code into the repository and step back. The SWA service monitors the codebase for changes, automatically rebuilding and redeploying your app to the hosted endpoint. Look for a <em>Previewing SWA</em> post later this week where we'll talk about built-in support for previewing apps in non-main branches, or in pull requests, that make it easier to manage apps with multiple contributors.</p><p>Prefer a 5-minute video overview? We have you covered!</p><iframe width="560" height="315" src="https://aka.ms/docs/player?show=azure-tips-and-tricks-static-web-apps&amp;ep=what-is-azure-static-web-apps-and-what-can-it-be-used-for-1-of-16--azure-tips-and-tricks-static-web-" frameborder="0"></iframe><h2 class="anchor anchorWithStickyNavbar_mojV" id="how-is-it-architected">How is it Architected?<a class="hash-link" href="#how-is-it-architected" title="Direct link to heading">​</a></h2><p>Static Web Apps can be built using popular front-end frameworks including React, Angular, Vue, Svelte, or Blazor. These apps typically consist of a collection of <strong>static content assets</strong> (HTML, JS, CSS and media files) coupled with a <strong>dynamic API endpoint</strong> to handle client interactions in real time.</p><p>Traditional web application deployments use a <em>single web server</em> to serve both the static assets and the API endpoint. This can make scaling these services sub-optimal in terms of global availability and runtime costs.</p><p>With Static Web Apps, we <strong>separate static assets from API endpoints</strong>, allowing each to be scaled using the technology best equipped to do this in a cost-effective manner.</p><ul><li>Static assets get served from geographically-distributed content servers worldwide, distributing the load and speeding up access to users nearby.</li><li>API endpoints are hosted using a <a href="https://docs.microsoft.com/en-us/azure/azure-functions/functions-overview" target="_blank" rel="noopener noreferrer">serverless architecture</a>, spinning up compute resources (to execute functions) only as needed, in response to trigger events.</li></ul><p>This architecture - with static content servers, serverless backends, and automated CI/CD workflows - simplifies your development workflow <strong>allowing you to focus your attention on the application logic and user experience</strong> components of your modern web application.</p><p><img loading="lazy" src="/30DaysOfSWA/assets/images/01-swa-overview-41d0e428dab8a7da10950b590d54c886.png" width="596" height="441" class="img_E7b_"></p><h2 class="anchor anchorWithStickyNavbar_mojV" id="where-can-i-use-it">Where can I use it?<a class="hash-link" href="#where-can-i-use-it" title="Direct link to heading">​</a></h2><p>That's a great question!! You can use Static Web Apps to:</p><ul><li>Build modern web apps with front-end frameworks (like Angular, React, Vue etc.)</li><li>Publish static web sites (using Gatsby, Hugo, Astro, Docusaurus, VuePress etc.)</li><li>Deploy web apps with frameworks like Next.js and Nuxt.js.</li></ul><p>You can <a href="https://docs.microsoft.com/en-us/azure/static-web-apps/front-end-frameworks" target="_blank" rel="noopener noreferrer"><strong>configure your existing application</strong></a> to use Azure Static Web Apps using an IDE like VS Code, or using Command-line tools (like Azure CLI and SWA CLI), or through the browser (using the Azure Portal). Look for two posts later this week that dive into this in detail:</p><ul><li><em>Building SWA</em> (tomorrow) on getting started with using SWA in your app.</li><li><em>Configuring SWA</em> (later) on customizing app behaviors and build process.</li></ul><p>But wait - there's one more thing. </p><p><strong>Keep an eye out for an announcement later in the series</strong> where we'll be debuting a new <a href="/30DaysOfSWA/showcase">Community Showcase</a> page - here's a sneak preview. You can filter it to see examples from popular front-end technologies, select "open source" to see the repository for inspiration - <strong>and consider adding your own project</strong> at the end of your journey!</p><p><img loading="lazy" src="/30DaysOfSWA/assets/images/swa-showcase-5214e0f3f6ea04a71fc5e8c82a94545a.png" width="936" height="826" class="img_E7b_"></p><h2 class="anchor anchorWithStickyNavbar_mojV" id="10-things-to-know">10 Things To Know!<a class="hash-link" href="#10-things-to-know" title="Direct link to heading">​</a></h2><p>We've talked about what SWA is, how it's architected, and where you can use it. But what are the key features that make it powerful? <a href="https://docs.microsoft.com/en-us/azure/static-web-apps/overview#key-features" target="_blank" rel="noopener noreferrer"><strong>Read the Documentation</strong></a> for the detailed list - or scan the visual guide below for a summary!</p><p><img loading="lazy" src="/30DaysOfSWA/assets/images/01-ten-things-f6eee9ff7c4e6fe0e5c36ee242cdb594.png" width="3840" height="2160" class="img_E7b_"></p><h2 class="anchor anchorWithStickyNavbar_mojV" id="exercise">Exercise:<a class="hash-link" href="#exercise" title="Direct link to heading">​</a></h2><p>That was a lot to digest right?  It helps to see some of these ideas in action. So here's two things you can do before we dive into the quickstart tomorrow:</p><ul><li>Visit the <a href="https://github.com/microsoft/static-web-apps-gallery-code-samples" target="_blank" rel="noopener noreferrer">Showcase Gallery</a> repository to see some examples of SWA in Action.</li><li>Follow the <a href="https://dev.to/t/staticwebapps" target="_blank" rel="noopener noreferrer">#staticwebapps</a> tag to see community-posted articles on usage.</li></ul>]]></content>
        <author>
            <name>Simona Cotin</name>
            <uri>https://github.com/simonaco</uri>
        </author>
        <author>
            <name>Nitya Narasimhan</name>
            <uri>https://twitter.com/nitya</uri>
        </author>
        <category label="swa" term="swa"/>
        <category label="30days" term="30days"/>
        <category label="core-concepts" term="core-concepts"/>
    </entry>
    <entry>
        <title type="html"><![CDATA[Kickoff #30DaysOfSWA!]]></title>
        <id>kickoff</id>
        <link href="https://staticwebdev.github.io/30DaysOfSWA/blog/kickoff"/>
        <updated>2021-05-01T00:00:00.000Z</updated>
        <summary type="html"><![CDATA[Welcome to the first day of #30DaysOfSWA!!]]></summary>
        <content type="html"><![CDATA[<p>Welcome to the first day of <strong>#30DaysOfSWA</strong>!!</p><p>Thank you for joining us on this fun and functional tour of <strong>Azure Static Web Apps</strong>. Whether you're new to the technology, or an experienced user, we hope there's something that interests and motivates you to keep going.</p><p><img loading="lazy" src="/30DaysOfSWA/assets/images/banner-kickoff-5bd74f140c45f930a6b0629389496a1b.png" width="1000" height="420" class="img_E7b_"></p><h2 class="anchor anchorWithStickyNavbar_mojV" id="hello-30daysofswa">Hello #30DaysOfSWA<a class="hash-link" href="#hello-30daysofswa" title="Direct link to heading">​</a></h2><p>Simply put, it's a month-long series of blog posts that provides you a curated and structured tour through the universe of  <a href="https://docs.microsoft.com/en-us/azure/static-web-apps/overview?WT.mc_id=30daysofswa-61155-cxall" target="_blank" rel="noopener noreferrer">Azure Static Web Apps</a>. </p><ul><li>Each article will be 5 mins or less in reading time</li><li>Each ends with an activity to help reinforce the learning</li><li>Articles will follow a structured roadmap over 4 weeks</li></ul><p>We've organized the journey into four stages, each building on the previous one in a way that mimics the developer experience with any new technology:</p><ul><li><strong>Week 1:</strong> Focus on Core Concepts, learning terminology and getting setup.</li><li><strong>Week 2:</strong> Focus on Usage Examples with quickstarts &amp; front-end technologies.</li><li><strong>Week 3:</strong> Focus on Dev Tools to develop, debug, test, and deploy, the SWA!</li><li><strong>Week 4:</strong> Focus on Best Practices, from services to end-to-end experiences.</li></ul><h2 class="anchor anchorWithStickyNavbar_mojV" id="week-1-roadmap">Week 1 Roadmap<a class="hash-link" href="#week-1-roadmap" title="Direct link to heading">​</a></h2><p>We are kicking off week 1 with a focus on <strong>Core Concepts</strong> to get you familiar with the high-level architecture, fundamental components and basic terminology for Azure Static Web Apps. Want a sneak peek at the topics? Here's a visual guide to help you!</p><p><img loading="lazy" alt="Visual sketchnote of roadmap" src="/30DaysOfSWA/assets/images/week1-roadmap-a7b1176dd93863ebebb95802ecc24ec9.png" width="3840" height="2160" class="img_E7b_"></p><p><strong>By the end of week 1 you should know</strong>:</p><ul><li>What Azure Static Web Apps is, and its benefits</li><li>How to get started building SWA or using it for your existing apps</li><li>How to go serverless, adding API capability with Azure Functions</li><li>How to configure SWA - from app behavior to build process</li><li>How to secure SWA - from user authentication to role-based authorization</li><li>How to preview SWA - on pull requests or test branches</li><li>How to deploy SWA - using different code sources, or CI/CD options</li></ul><p>By the end of the week you should be familiar with SWA terminology and developer workflows - and be ready to explore usage scenarios with various front-end frameworks or static site generators!</p><h2 class="anchor anchorWithStickyNavbar_mojV" id="take-the-journey">Take The Journey<a class="hash-link" href="#take-the-journey" title="Direct link to heading">​</a></h2><p>They say it takes 30 days to make a habit. It's our hope that doing short bursts of reading and activity with Azure Static Web Apps on a daily basis, will lead to better learning and development habits in general.</p><p>We want to make it easy for you to participate - here are options to follow along:</p><ul><li>Bookmark <a href="https://aka.ms/30DaysofSWA" target="_blank" rel="noopener noreferrer">this site</a> and visit daily</li><li>Subscribe to the <a href="https://aka.ms/30DaysOfSWA/rss" target="_blank" rel="noopener noreferrer">RSS Feed</a> in your favorite Feed Reader</li><li>Visit the <a href="https://dev.to/nitya/series/17901" target="_blank" rel="noopener noreferrer">dev.to Series Page</a> and like, comment on, or bookmark, the posts.</li></ul><p>Want to really get the most from this? Try the exercises each day, and take a moment on a weekly basis, to write a blog post or capture your own notes on what your main takeaways were. As a fan of <a href="https://twitter.com/sketchthedocs" target="_blank" rel="noopener noreferrer">visual storytelling</a> I know that writing things down helps improve your understanding and recall of the material!</p><h2 class="anchor anchorWithStickyNavbar_mojV" id="provide-us-feedback">Provide Us Feedback<a class="hash-link" href="#provide-us-feedback" title="Direct link to heading">​</a></h2><p><strong>We want to make this useful and beginner-friendly!</strong> So if you have comments or questions that can help us improve this content, please drop us a note in our <a href="https://github.com/orgs/staticwebdev/discussions/categories/-30daysofswa" target="_blank" rel="noopener noreferrer">Discussions</a> board!</p><h2 class="anchor anchorWithStickyNavbar_mojV" id="meet-the-authors">Meet The Authors<a class="hash-link" href="#meet-the-authors" title="Direct link to heading">​</a></h2><p>Articles are written by a multi-disciplinary team of contributors from across Microsoft and the community - including members of the Static Web Apps product group and Microsoft Developer Relations. </p><p><img loading="lazy" alt="Banner with people" src="/30DaysOfSWA/assets/images/series-people-13a2856edd7022e82a252ed05dffbabc.png" width="1000" height="420" class="img_E7b_"></p><p>We'll keep this page updated on a daily basis, to reflect the latest author whose post was published. We'll kick things off with the authors of this post.</p><ul><li><strong>Nitya Narasimhan</strong>, Senior Cloud Advocate @Microsoft</li><li><strong>Reshmi Sriram</strong>, Static Web Apps PM @Microsoft</li><li><em>to be updated daily ...</em></li></ul><p>Each post will identify the authors by name, and link to a relevant online profile. This series is a labor of love, so if you like a post - show that author some love by providing feedback or saying hello on their identified profile!</p><hr><h2 class="anchor anchorWithStickyNavbar_mojV" id="lets-get-started">Let's Get Started!<a class="hash-link" href="#lets-get-started" title="Direct link to heading">​</a></h2><p>I think that's all you need to know for now! Hope your're as excited as we are. Check back for the next post and ... <strong>#LetsDoThis</strong> !!</p><p><img loading="lazy" src="/30DaysOfSWA/assets/images/logo-746b1f64320de6844671bfc8c2f881f8.svg" width="250" height="250" class="img_E7b_"></p>]]></content>
        <author>
            <name>Nitya Narasimhan</name>
            <uri>https://twitter.com/nitya</uri>
        </author>
        <author>
            <name>Reshmi Sriram</name>
            <uri>https://twitter.com/reshsriram</uri>
        </author>
        <author>
            <name>Simona Cotin</name>
            <uri>https://github.com/simonaco</uri>
        </author>
        <author>
            <name>Glaucia Llemos</name>
            <uri>https://github.com/glaucia86</uri>
        </author>
        <author>
            <name>Anthony Chu</name>
            <uri>https://github.com/anthonychu</uri>
        </author>
        <author>
            <name>Joseph Lin</name>
            <uri>https://github.com/joslinmicrosoft</uri>
        </author>
        <author>
            <name>Mitali Karmarkar</name>
            <uri>https://twitter.com/KarmarkarMitali</uri>
        </author>
        <author>
            <name>Michail Shaposhnikov</name>
            <uri>https://github.com/mishapos</uri>
        </author>
        <category label="swa" term="swa"/>
        <category label="30days" term="30days"/>
    </entry>
    <entry>
        <title type="html"><![CDATA[It's the SWA-anniversary!!]]></title>
        <id>swanniversary</id>
        <link href="https://staticwebdev.github.io/30DaysOfSWA/blog/swanniversary"/>
        <updated>2021-04-30T00:00:00.000Z</updated>
        <summary type="html"><![CDATA[View Schedule & Speaker Lineup//aka.ms/swaanniversary]]></summary>
        <content type="html"><![CDATA[<p><img loading="lazy" src="/30DaysOfSWA/assets/images/swanniversary-d632d17c49b5e3631d39ad0c230f2ad8.png" width="1920" height="1080" class="img_E7b_"></p><h4 class="anchor anchorWithStickyNavbar_mojV" id="view-schedule--speaker-lineup-httpsakamsswaanniversary">View Schedule &amp; Speaker Lineup: <a href="https://aka.ms/swaanniversary" target="_blank" rel="noopener noreferrer">https://aka.ms/swaanniversary</a><a class="hash-link" href="#view-schedule--speaker-lineup-httpsakamsswaanniversary" title="Direct link to heading">​</a></h4><hr><p>On May 12, 2021, the <a href="https://docs.microsoft.com/en-us/azure/static-web-apps/overview?WT.mc_id=30daysofswa-61155-cxall" target="_blank" rel="noopener noreferrer">Azure Static Web Apps</a> service hit a significant milestone - <a href="https://azure.microsoft.com/en-us/updates/azure-static-web-apps-is-now-generally-available/?WT.mc_id=30daysofswa-61155-cxall" target="_blank" rel="noopener noreferrer">becoming generally available</a> with support for many of the popular <a href="https://docs.microsoft.com/en-us/azure/static-web-apps/front-end-frameworks" target="_blank" rel="noopener noreferrer">front-end frameworks and static site generators</a> used for modern web app development.</p><p>On May 12, 2022, Azure Static Web Apps will make the first-year anniversary of that milestone - making this the perfect time to look back on all the progress made, and look ahead to what's in store next.</p><h2 class="anchor anchorWithStickyNavbar_mojV" id="celebrate-with-swaanniversary">Celebrate with #SWAanniversary<a class="hash-link" href="#celebrate-with-swaanniversary" title="Direct link to heading">​</a></h2><p>On May 19, 2022, join us live on <a href="https://docs.microsoft.com/en-us/learn/tv/?WT.mc_id=30daysofswa-61155-cxall" target="_blank" rel="noopener noreferrer">Learn TV</a> for a 2-hour celebration with some of our favorite speakers and guests from both Microsoft and the larger developer community. Can you tell we're excited for this birthday?</p><iframe width="560" height="315" src="https://www.youtube.com/embed/OGlM5CgCwwc" title="YouTube video player" frameborder="0" allow="accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture"></iframe><p>Check out <a href="https://docs.microsoft.com/en-us/events/learntv/swa-anniversary-may-2022/?WT.mc_id=30daysofswa-61155-cxall" target="_blank" rel="noopener noreferrer">the Event page</a> to learn more about the speakers and topics on the agenda. Add the event to your calendar, and join us live - or bookmark this page and revisit it for links to relevant resources and video replays.</p><h2 class="anchor anchorWithStickyNavbar_mojV" id="learn-with-30daysofswa">Learn with #30DaysOfSWA<a class="hash-link" href="#learn-with-30daysofswa" title="Direct link to heading">​</a></h2><p>But there's more! <em>Are you new to Azure Static Web Apps?</em> Do you want to get a beginner-friendly tour of the core concepts, usage examples, developer tools, and best practices involved in building and deploy modern web applications with this service?</p><p><strong>You're in luck!</strong></p><p>Watch this space for an update on a new content series that will help you jumpstart that learning journey! Throughout the month of May, we'll bring together a diverse group of technologists to share short articles with resources and insights on a curated tour of Static Web Apps - taking you from <strong>code to scale</strong>.</p><p><img loading="lazy" alt="The #30DaysOfSWA logo" src="/30DaysOfSWA/assets/images/logo-light-c06a2cb26903f93ddf79056b71d047e9.png" width="724" height="662" class="img_E7b_"></p><h2 class="anchor anchorWithStickyNavbar_mojV" id="how-can-you-participate">How Can You Participate?<a class="hash-link" href="#how-can-you-participate" title="Direct link to heading">​</a></h2><p>Some actions you can take today to get ready for a fun month of learning:</p><ul><li>Bookmark this Series page or <a href="https://aka.ms/30DaysOfSWA/rss" target="_blank" rel="noopener noreferrer"><strong>Subscribe to the RSS feed</strong></a></li><li>Follow the <a href="https://dev.to/t/staticwebapps" target="_blank" rel="noopener noreferrer"><strong>#staticwebapps tag on dev.to</strong></a> - and consider making a post there!</li><li>Introduce yourself on <a href="https://github.com/orgs/staticwebdev/discussions/categories/-30daysofswa" target="_blank" rel="noopener noreferrer"><strong>our Discussions Forum</strong></a> - tell us what you hope to learn!</li></ul><h2 class="anchor anchorWithStickyNavbar_mojV" id="self-study-resources">Self-Study Resources<a class="hash-link" href="#self-study-resources" title="Direct link to heading">​</a></h2><p>Our goal is to help make this a beginner-friendly learning journey into Azure Static Web Apps. We hope we inspire you to keep going beyond #30Days - and wanted to share resources to motivate you to keep going. Here are three links to bookmark:</p><ul><li>The <a href="/30DaysOfSWA/resources"><strong>Resources</strong></a> page - will be updated with links related to each article in the series, all through May! Use this to explore detours and deep dives.</li><li>The <a href="https://docs.microsoft.com/en-us/learn/paths/azure-static-web-apps/?WT.mc_id=30daysofswa-61155-cxall" target="_blank" rel="noopener noreferrer"><strong>Microsoft Learn Path</strong></a> - teaches you how to build your first Static Web Apps powered experience - with React, Angular, Vue and Blazor coding options.</li><li>The <a href="https://docs.microsoft.com/en-us/users/nityan/collections/7d2ws6zd1mxmp6?WT.mc_id=30daysofswa-61155-cxall" target="_blank" rel="noopener noreferrer"><strong>#30DaysOfSWA Collection</strong></a> - a Microsoft-specific collection of resources (from documentation to videos and code samples) that I will continue to update.</li></ul>]]></content>
        <author>
            <name>Reshmi Sriram</name>
            <uri>https://twitter.com/reshsriram</uri>
        </author>
        <author>
            <name>Nitya Narasimhan</name>
            <uri>https://twitter.com/nitya</uri>
        </author>
        <category label="swa" term="swa"/>
        <category label="30days" term="30days"/>
        <category label="event" term="event"/>
    </entry>
</feed>